#!/usr/bin/env python3
import argparse 
import subprocess
import re
import csv

if __name__ == '__main__':
    parser = argparse.ArgumentParser()

    parser.add_argument('--interval', '-i', type=int, help='interval of mpstat for capture data', default=1)
    parser.add_argument('--epoch', '-e', type=int, help='epoch of mpstat for capture data', default=5)
    parser.add_argument('--export', '-f', type=str, help='export mpstat data', default='export.csv')
    
    args, _ = parser.parse_known_args()
    
    print("create temporary file : {0}".format(args.export))

    pattern = re.compile(r'(\d{2}:\d{2}:\d{2})\s+(\w+)\s+([\d.]+)\s+([\d.]+)\s+([\d.]+)\s+([\d.]+)\s+([\d.]+)\s+([\d.]+)')
    print("start: get cpu core information.")
    process = subprocess.Popen(['sar', '-P', 'ALL', '-u', str(args.interval), str(args.epoch)], stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
    
    try:
        with open(args.export, 'wt') as f:
            writer = csv.writer(f)
            writer.writerow(['count', 'time','cpu','user','nice','system','iowait','steal','idle'])
            count = 0
            while True:
                o = process.stdout.readline()
                if o == '' and process.poll() is not None:
                    break
                if o:
                    for match in pattern.finditer(o):
                        t, cpu, user, nice, system, iowait, steal, idle = match.groups()
                        if cpu.lower() == 'all':
                            count += 1
                            print("Time\t\tuser\tnice\tsystem\tiowait\tsteal\tidle")
                            print(f"{t}\t{user}\t{nice}\t{system}\t{iowait}\t{steal}\t{idle}")
                            print()
                        writer.writerow([count, t, cpu, user, nice, system, iowait, steal, idle])
    finally:
        process.terminate()
        process.wait()
        
